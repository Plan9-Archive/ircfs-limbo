# summary

this package contains an irc file system (ircfs), an irc library
and a tk front-end for the filesystem (wm/irc).  all written in
limbo for use under inferno.


# download

see ircfs' homepage at http://www.ueber.net/code/r/ircfs for the
latest version.


# install

to install, first make a file "mkconfig" similar to your inferno's
installation mkconfig (symlink/bind it).  now type "mk install" to
compile and install.  NOTE: just "mk" does not work, since the
module files (*.m) will be missing and compilation of source files
(*.b) will fail.


# example

to run ircfs on a remote machine and export its files, you can do the following.

on the remote machines, to start ircfs:

	once: mkdir /mnt/irc /mnt/irc/freenode $home/irclog $home/irclog/freenode
	emu -c0
	ndb/cs
	mount {ircfs -dD -l $home/irclog/freenode -a net!irc.freenode.net!6667 -n ircfsuser freenode} /mnt/irc/freenode
	styxlisten -A net!*!6872 {export /mnt/irc}

and to mount the ircfs tree and start the gui wm/irc:

	once: mkdir /mnt/irc
	ndb/cs
	mount net!remotemachine!6872 /mnt/irc
	wm/irc -d /mnt/irc/freenode &


# example, with authentication

you should set up authentication, this should be outside the scope of this document...
to set this up, first run a signer:

	ndb/cs
	auth/createsignerkey
	svc/auth
	auth/changelogin yourusername	# enter password

make the keyring/ircfs file:

	getauthinfo $home/keyring/ircfs	# enter signer address and password

now either copy the ircfs to the styx client and server,
or do the getauthinfo again.  finally, replace the -A in
the mount and styxlisten calls earlier by "-k $home/keyring/ircfs".


# documentation

see the manual pages for details, ircfs(4) and wm-irc(1).


# licence & author

this code is in the public domain.  the code is written by mechiel
lukkien, reachable at mechiel@xs4all.nl or mechiel@ueber.net.


# todo

- ircfs:  for nick changes other than by self, wm/irc does not show new name?
- wm/irc: highlight based on regex'en on command-line?  in addition to current nick.
- ircfs: really forget about a user on a channel if we part the channel.  now ircfs sometimes "resurrects" a channel because a user who was in that channel quit irc.
- wm/irc: fix snarf/paste, sometimes it doesn't work, trying a second time makes it work
- wm/irc: allow searching backwards and cycling to earlier hits
- both: make ircfs keep track of unread data.  when a client opens a file and reads the history, ircfs will send a "new data" meta-message when it switches from already-read to not-yet-read data.
- ircfs: on disconnect due to connection timeout ircfs hangs.  perhaps in combination with wm/irc disappearing
- ircfs: fix ircfs-bug.txt
- wm/irc: somehow show in interface that remote connection is not responding?

- read irc rfc's, try on many networks/channels
- find ways to crash ircfs and wm/irc, and fix it
- ircfs: unify reading/writing irc messages in /appl/lib/irc.b?  messages are almost bidirectional?
- ircfs: perhaps add the more obscure commands: info, ison, links, list, lusers, motd, note, ping, servlist, squery?, stats, time, trace, version, userhost, whowas
- wm/irc: open servers in background?  could introduce races
